#!/bin/busybox ash
# init-script for WD Mycloud Mirror gen2 & Ex2 ultra
# Boots from partition labeled "rootfs"

#-----------functions--------------
# Start decryption filesystem
decrypt_shell() {
  tftp -r license.key -l /mnt/key/license.key -g tftp.local
  wait
  if [  -e /mnt/key/license.key  ]; then
    cryptsetup luksOpen /dev/md0 cryptroot --key-file /mnt/key/license.key
    dd if=/dev/urandom of=/mnt/key/license.key bs=1024 count=$RANDOM
    tftp -r license.key -l /mnt/key/license.key -p tftp.local
    rm /mnt/key/license.key
    check_unlock
  else
    dropbear -B -p 2222 -b /etc/dropbear/banner.crypto -P /run/dropbear.pid 2>&1 >/dev/null
  fi
}

# Check if key-decrypt was sucessfull
check_unlock(){
wait    
if ! [ -e /dev/mapper/cryptroot ]; then
    echo -e "Unlock check failed,..."
    rescue_shell
fi
}

# rescue_shell
rescue_shell() {
  echo -e "\n Something went wrong. Dropping to a shell.\n"
 
  ## Wait for manual decryption
  # while ! [ -e /dev/mapper/cryptroot ]; do
  #    sleep 2
  #  done
  #  boot
  ## Or
    
  # Run UART shell
  exec 0</dev/console
  exec 1>/dev/console
  exec 2>/dev/console
  exec setsid cttyhack /bin/ash
  
}

#LVM init sequence
initlvm() {
  lvm vgscan --mknodes # creates /dev/mapper/control
  lvm vgchange -a ly
  lvm vgscan --mknodes # creates /dev/mapper/VG-root and /dev/VG/root
  wait
}

#Switchroot seqence
boot() {
  echo -e "\n Unmounting and Switch to OS\n"
  wait
  # kill running daemons
  [ -r "/run/dropbear.pid" ] && kill -9 $(cat /run/dropbear.pid)
  [ -r "/run/udhcpc.pid" ]   && kill -9 $(cat /run/udhcpc.pid)
  umount /mnt/config 2> /dev/null
  umount /sys 2> /dev/null
  umount /proc 2> /dev/null
  umount /dev/pts 2> /dev/null
  umount /dev 2> /dev/null
  exec switch_root -c /dev/console /mnt/root /sbin/init
}

#Reset button
resetbutton_init() {
echo 50 > /sys/class/gpio/export
echo 1 > /sys/class/gpio/gpio50/active_low
}

#-----------init script--------------
# Creat folders and install Busybox
/bin/busybox mkdir -p /dev /mnt/root /mnt/key /mnt/config /mnt/config/initrd /proc /root /usr/sbin /usr/bin /sbin /bin /sys /run /var/run
/bin/busybox --install -s

export PATH=/bin:/sbin:/usr/bin:/usr/sbin

# Mount the /proc and /sys filesystems.
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devtmpfs none /dev

# Adding mdev support
echo /sbin/mdev >/proc/sys/kernel/hotplug
mdev -s

# Adding reset button beheavor
resetbutton_init

# Initial Raid
echo 'DEVICE /dev/sd?*' >/etc/mdadm.conf
mdadm -Eb /dev/sd?* >>/etc/mdadm.conf
mdadm -As --force
wait # disk not ready?
mdadm --assemble --scan
# If case a disk was replaced (TODO: make an IF here)
mdadm --manage /dev/md0 --add /dev/sdb


# setting up network
#/sbin/getmac
ifconfig eth0 hw ether c2:0d:88:00:80:08
#ifconfig eth0 up
udhcpc -t 5 -q -s /bin/simple.script -p /run/udhcpc.pid

# We mount encrypted rootfs by default
chooseBoot=1

#check for LUKS-devices
read -t 15 -p "
Avalaible boot options:
1. From encrypted rootfs
2. From custom device
(You have 15 seconds for input)
Press 1 or type your path, i.e. /dev/sdc1: " chooseBoot

if [ $chooseBoot == 1 ]; then 
    decrypt_shell
    mountPoint="/dev/MyVolGroup/root"
    initlvm
else
    mountPoint=$chooseBoot
fi

echo "
Booting from $mountPoint
"

mount -o rw $mountPoint /mnt/root 2>&1 >/dev/null
if [ -h /mnt/root/sbin/init -o -e /mnt/root/sbin/init ]; then
  ifconfig eth0 down
  boot
else
  rescue_shell
fi
